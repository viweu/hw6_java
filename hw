Урок 6. Хранение и обработка данных ч3: множество коллекций Set
Формат сдачи: ссылка на репозиторий в HitHub.

Задание

-Подумать над структурой класса Ноутбук для магазина техники - выделить поля и
методы. Реализовать в java.
-Создать множество ноутбуков.
-Написать метод, который будет запрашивать у пользователя критерий (или критерии)
фильтрации и выведет ноутбуки, отвечающие фильтру. Критерии фильтрации можно
хранить в Map. Например:
“Введите цифру, соответствующую необходимому критерию:
1 - ОЗУ
2 - Объем ЖД
3 - Операционная система
4 - Цвет …
-Далее нужно запросить минимальные значения для указанных критериев - сохранить
параметры фильтрации можно также в Map.
-Отфильтровать ноутбуки их первоначального множества и вывести проходящие по
условиям.


// Класс ноутбук для магазина техники
public class Laptop {
    private String brand; // Марка ноутбука
    private int ram; // Оперативная память в гигабайтах
    private int storage; // Объем жесткого диска в гигабайтах
    private String os; // Операционная система
    private String color; // Цвет ноутбука
    
    // Конструктор класса
    public Laptop(String brand, int ram, int storage, String os, String color) {
        this.brand = brand;
        this.ram = ram;
        this.storage = storage;
        this.os = os;
        this.color = color;
    }
    
    // Геттеры и сеттеры для полей

    public String getBrand() {
        return brand;
    }

    public void setBrand(String brand) {
        this.brand = brand;
    }

    public int getRam() {
        return ram;
    }

    public void setRam(int ram) {
        this.ram = ram;
    }

    public int getStorage() {
        return storage;
    }

    public void setStorage(int storage) {
        this.storage = storage;
    }

    public String getOs() {
        return os;
    }

    public void setOs(String os) {
        this.os = os;
    }

    public String getColor() {
        return color;
    }

    public void setColor(String color) {
        this.color = color;
    }
}

// В основном классе
import java.util.*;

public class Main {
    public static void main(String[] args) {
        // Создание множества ноутбуков
        Set<Laptop> laptops = new HashSet<>();
        laptops.add(new Laptop("HP", 8, 500, "Windows 10", "Серый"));
        laptops.add(new Laptop("Dell", 16, 1000, "Windows 10", "Черный"));
        laptops.add(new Laptop("Lenovo", 4, 256, "Windows 10", "Серебристый"));
        laptops.add(new Laptop("Apple", 8, 512, "macOS", "Серый"));
        laptops.add(new Laptop("Asus", 16, 1000, "Windows 10", "Черный"));
        
        // Запрос критериев фильтрации у пользователя
        Scanner scanner = new Scanner(System.in);
        System.out.println("Введите цифру, соответствующую необходимому критерию:");
        System.out.println("1 - Оперативная память (ГБ)");
        System.out.println("2 - Объем жесткого диска (ГБ)");
        System.out.println("3 - Операционная система");
        System.out.println("4 - Цвет");

        int criterion = scanner.nextInt();
        Map<String, Object> filterCriteria = new HashMap<>();

        if (criterion == 1) {
            System.out.println("Введите минимальное значение оперативной памяти (ГБ):");
            int minRam = scanner.nextInt();
            filterCriteria.put("RAM", minRam);
        } else if (criterion == 2) {
            System.out.println("Введите минимальный объем жесткого диска (ГБ):");
            int minStorage = scanner.nextInt();
            filterCriteria.put("Storage", minStorage);
        } else if (criterion == 3) {
            System.out.println("Введите операционную систему:");
            String os = scanner.next();
            filterCriteria.put("OS", os);
        } else if (criterion == 4) {
            System.out.println("Введите цвет:");
            String color = scanner.next();
            filterCriteria.put("Color", color);
        }

        // Фильтрация ноутбуков по заданным критериям
        Set<Laptop> filteredLaptops = filterLaptops(laptops, filterCriteria);

        // Вывод результатов
        System.out.println("Результаты фильтрации:");
        for (Laptop laptop : filteredLaptops) {
            System.out.println("Марка: " + laptop.getBrand());
            System.out.println("Оперативная память: " + laptop.getRam() + " ГБ");
            System.out.println("Объем жесткого диска: " + laptop.getStorage() + " ГБ");
            System.out.println("Операционная система: " + laptop.getOs());
            System.out.println("Цвет: " + laptop.getColor());
            System.out.println("-----------------------------------");
        }
    }

    // Метод для фильтрации ноутбуков по заданным критериям
    public static Set<Laptop> filterLaptops(Set<Laptop> laptops, Map<String, Object> filterCriteria) {
        Set<Laptop> filteredLaptops = new HashSet<>();
        
        for (Laptop laptop : laptops) {
            boolean passFilter = true;
            
            for (String criterion : filterCriteria.keySet()) {
                Object value = filterCriteria.get(criterion);
                if (criterion.equals("RAM")) {
                    if (laptop.getRam() < (int)value) {
                        passFilter = false;
                        break;
                    }
                } else if (criterion.equals("Storage")) {
                    if (laptop.getStorage() < (int)value) {
                        passFilter = false;
                        break;
                    }
                } else if (criterion.equals("OS")) {
                    if (!laptop.getOs().equals(value)) {
                        passFilter = false;
                        break;
                    }
                } else if (criterion.equals("Color")) {
                    if (!laptop.getColor().equals(value)) {
                        passFilter = false;
                        break;
                    }
                }
            }
            
            if (passFilter) {
                filteredLaptops.add(laptop);
            }
        }
        
        return filteredLaptops;
    }
}
